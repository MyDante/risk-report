import pandas as pd

# 1) –†—É—á–Ω–∏–π –ø–∞—Ä—Å–∏–Ω–≥ CSV, —è–∫ —Ä–∞–Ω—ñ—à–µ
records = []
with open('news_sample.csv', encoding='utf-8') as f:
    for idx, line in enumerate(f):
        if idx == 0 or not line.strip(): 
            continue
        parts = line.strip().split(',')
        if len(parts) < 5: 
            continue
        date        = parts[0]
        city        = parts[1]
        attack_type = parts[-2]
        link        = parts[-1]
        text        = ','.join(parts[2:-2]).strip()
        records.append({
            'date': date,
            'city': city,
            'text': text,
            'attack_type': attack_type,
            'link': link
        })

df = pd.DataFrame(records)

# 2) –°—Ç–µ–º–∏ –¥–ª—è –ø–æ—à—É–∫—É (–∫–æ—Ä–æ—Ç–∫—ñ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–∏)
stems = [
    "—Å–∫—É–ø—á",      # —Å–∫—É–ø—á–µ–Ω–Ω—è, —Å–∫—É–ø—á–µ–Ω—å
    "–ø–µ—Ä–µ–º—ñ—â",    # –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è, –ø–µ—Ä–µ–º—ñ—â–µ–Ω—å
    "–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü", # –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü—ñ—è, –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–æ–≤–∞–Ω–∏
    "–∑–∞–≥—Ä–æ–∑",     # –∑–∞–≥—Ä–æ–∑–∞, –∑–∞–≥—Ä–æ–∑–∏
    "—Ç—Ä–∏–≤–æ–≥",     # —Ç—Ä–∏–≤–æ–≥–∞, —Ç—Ä–∏–≤–æ–≥—É
    "–ø–æ—Å–∏–ª",      # –ø–æ—Å–∏–ª–∏–ª–∏, –ø–æ—Å–∏–ª–µ–Ω–Ω—è
    "–∑–∞—è–≤",       # –∑–∞—è–≤–∏, –∑–∞—è–≤–ª—è—î
    "—Ä–æ–∑–≤—ñ–¥",     # —Ä–æ–∑–≤—ñ–¥–∫–∞, —Ä–æ–∑–≤—ñ–¥—É–≤–∞–ª—å–Ω—ñ
    "–±–æ–π–æ–≤"       # –±–æ–π–æ–≤–∞, –±–æ–π–æ–≤–∏–π, –±–æ—î–≤–∏–π, –±–æ–π–æ–≤–∏–π
]

def has_signal(text: str) -> bool:
    low = text.lower()
    return any(st in low for st in stems)

df['preparation_signal'] = df['text'].apply(has_signal)

# 3) –í–∏–≤—ñ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
signals = df[df['preparation_signal']]
print("\nüîç –ó–∞–ø–∏—Å–∏ –∑ –≤–∏—è–≤–ª–µ–Ω–∏–º–∏ —Å–∏–≥–Ω–∞–ª–∞–º–∏ –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–æ –∞—Ç–∞–∫–∏:")
if not signals.empty:
    print(signals[['date','city','attack_type','text']].to_string(index=False))
else:
    print("‚Äî –∂–æ–¥–Ω–æ–≥–æ ‚Äî")

print(f"\n–£—Å—å–æ–≥–æ –∑–∞–ø–∏—Å—ñ–≤: {len(df)}")
print(f"–ó –Ω–∏—Ö —ñ–∑ —Å–∏–≥–Ω–∞–ª–∞–º–∏: {df['preparation_signal'].sum()}")

# 4) (–ó–∞ –±–∞–∂–∞–Ω–Ω—è–º) –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –∫—Ä–æ–∫—ñ–≤
df.to_csv('news_with_signals.csv', index=False, encoding='utf-8')
print("\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É news_with_signals.csv")
